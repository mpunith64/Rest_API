name: CI/CD Pipeline for AKS

on:
  push:
    branches:
      - main
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t mpunith/rest-api:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push mpunith/rest-api:latest

      # Set up Azure credentials
      - name: Set up Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: ./IAC

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply-auto-approve
        working-directory: ./IAC

        # Get AKS credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group my-resource-group --name my-aks

      # Set the kubectl context
      - name: Set kubectl context
        run: kubectl config use-context my-aks

      # Deploy to AKS (Apply deployment and service YAML)
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./app



